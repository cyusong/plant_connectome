Grain yield of the maize plant depends on the sizes, shapes, and numbers of ears and the kernels they bear. An automated pipeline that can measure these components of yield from easily-obtained digital images is needed to advance our understanding of this globally important crop. Here we present three custom algorithms designed to compute such yield components automatically from digital images acquired by a low-cost platform. One algorithm determines the average space each kernel occupies along the cob axis using a sliding-window Fourier transform analysis of image intensity features. A second counts individual kernels removed from ears, including those in clusters. A third measures each kernel's major and minor axis after a Bayesian analysis of contour points identifies the kernel tip. Dimensionless ear and kernel shape traits that may interrelate yield components are measured by principal components analysis of contour point sets. Increased objectivity and speed compared to typical manual methods are achieved without loss of accuracy as evidenced by high correlations with ground truth measurements and simulated data. Millimeter-scale differences among ear, cob, and kernel traits that ranged more than 2.5-fold across a diverse group of inbred maize lines were resolved. This system for measuring maize ear, cob, and kernel attributes is being used by multiple research groups as an automated Web service running on community high-throughput computing and distributed data storage infrastructure. Users may create their own workflow using the source code that is staged for download on a public repository.

Gene: !affects! Grain yield 
Algorithm: !determines! Average space of kernel along cob axis 
Algorithm: !counts! Individual kernels removed from ears 
Algorithm: !measures! Kernel's major and minor axis 
Principal components analysis: !measures! Dimensionless ear and kernel shape traits 
High correlations: !evidences! Increased objectivity and speed 
Maize lines: !resolve! Millimeter-scale differences 
Web service: !runs on! Community high-throughput computing infrastructure 
Source code: !staged for! Download on public repository